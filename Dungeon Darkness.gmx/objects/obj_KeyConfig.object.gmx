<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text[0] = "Up: " + getKey(global.cUp[global.lastplayerpressed]);
text[1] = "Down: " + getKey(global.cDown[global.lastplayerpressed]);
text[2] = "Left: " + getKey(global.cLeft[global.lastplayerpressed]);
text[3] = "Right: " + getKey(global.cRight[global.lastplayerpressed]);
text[4] = "Action/Jump: " + getKey(global.cJump[global.lastplayerpressed]);
text[5] = "Shoot: " + getKey(global.cFire[global.lastplayerpressed]);
text[6] = "Back/Cancel: " + getKey(global.cCancel[global.lastplayerpressed]);
text[7] = "Back to Options";

select = 0;

xpos = 64;

background_xscale[0] = 2;
background_yscale[0] = 2;

view_wview[0] = view_hview[0]*global.screenRatio;
view_wport[0] = global.screenHeight*global.screenRatio;
view_hport[0] = global.screenHeight;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(xpos &gt; 0.5){
    xpos = xpos / 1.1;
} else {
    xpos = 0;
}

text[0] = "Up: " + getKey(global.cUp[global.lastplayerpressed]);
text[1] = "Down: " + getKey(global.cDown[global.lastplayerpressed]);
text[2] = "Left: " + getKey(global.cLeft[global.lastplayerpressed]);
text[3] = "Right: " + getKey(global.cRight[global.lastplayerpressed]);
text[4] = "Action/Jump: " + getKey(global.cJump[global.lastplayerpressed]);
text[5] = "Shoot: " + getKey(global.cFire[global.lastplayerpressed]);
text[6] = "Back/Cancel: " + getKey(global.cCancel[global.lastplayerpressed]);

if(instance_number(obj_KeyInput) == 0){
    if(gamepad_button_check_pressed(global.lastplayerpressed,global.cUp[global.lastplayerpressed])){
        if(select &gt; 0){
            select--;
        } else {
            select = 7;
        }
        if(global.sfx) audio_play_sound(snd_Select,10,false);
    }
    if(gamepad_button_check_pressed(global.lastplayerpressed,global.cDown[global.lastplayerpressed])){
        if(select &lt; 7){
            select++;
        } else {
            select = 0;
        }
        if(global.sfx) audio_play_sound(snd_Select,10,false);
    }
    if(gamepad_button_check_pressed(global.lastplayerpressed,global.cJump[global.lastplayerpressed])){
        if(select == 7){
            room_goto(rm_Options);
        } else {
            input = instance_create(0,0,obj_KeyInput);
            input.key = select;
        }
    }
}
background_x[0] = 240-((xpos)/3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_number(obj_KeyInput) == 0){
    draw_set_alpha(1-(xpos/64));
    draw_set_color(c_white);
    draw_set_halign(fa_center);
    draw_set_valign(fa_top);
    draw_set_font(fnt_Large);
    draw_text_transformed(view_wview[0]/2-(xpos*2.5),4,"Key Config",2,2,0);
    draw_text_transformed(view_wview[0]/2-(xpos*2),49,"For player " + string(global.lastplayerpressed+1),1,1,0);
    for(i = 0; i &lt; 8; i++){
        if(select == i){
            dtext = "&gt; " + text[i] + " &lt;";
        } else {
            dtext = text[i];
        }
        draw_text_transformed(view_wview[0]/2-xpos,(room_height*0.3)+(i*18),dtext,0.6,0.6,0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
