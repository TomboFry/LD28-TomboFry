<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xpos = 64;

upscale = 0;
downscale = 0;

select = 0;

background_xscale[0] = 2;
background_yscale[0] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(xpos &gt; 0.5){
    xpos = xpos / 1.1;
} else {
    xpos = 0;
}

downscale = 0;
upscale = 0;

if(!global.usingKeyboard){
    count = getControlNum();
    for(i = 0; i &lt; count; i++){
        if(gamepad_button_check_pressed(i,global.cLeft[i])){
            if(select &gt; 0){
                select--;
            } else {
                select = sprite_get_number(spr_Maps)-1;
            }
            if(global.sfx) sound_play(snd_Select);
        }
        if(gamepad_button_check_pressed(i,global.cRight[i])){
            if(select &lt; sprite_get_number(spr_Maps)-1){
                select++;
            } else {
                select = 0;
            }
            if(global.sfx) sound_play(snd_Select);
        }
        if(gamepad_button_check(i,global.cRight[i])){
            downscale = 1;
        } else if(gamepad_button_check(i,global.cLeft[i])){
            upscale = 1;
        }
        if(gamepad_button_check_pressed(i,global.cJump[i])){
            if(select == 0){
                room_goto(rm_Level1);
            } else if(select == 1){
                room_goto(rm_Level2);
            } else if(select == 2){
                room_goto(rm_Level3);
            }
        }
        if(gamepad_button_check_pressed(i,global.cCancel[i])){
            room_goto(rm_CharacterSelect);
        }
    }
} else {
    for(i = 0; i &lt; 2; i++){
        if(keyboard_check_pressed(global.ckLeft[i])){
            if(select &gt; 0){
                select--;
            } else {
                select = sprite_get_number(spr_Maps)-1;
            }
            if(global.sfx) sound_play(snd_Select);
        }
        if(keyboard_check_pressed(global.ckRight[i])){
            if(select &lt; sprite_get_number(spr_Maps)-1){
                select++;
            } else {
                select = 0;
            }
            if(global.sfx) sound_play(snd_Select);
        }
        if(keyboard_check(global.ckRight[i])){
            downscale = 1;
        } else if(keyboard_check(global.cLeft[i])){
            upscale = 1;
        }
        if(keyboard_check_pressed(global.ckFire[i])){
            if(select == 0){
                room_goto(rm_Level1);
            } else if(select == 1){
                room_goto(rm_Level2);
            } else if(select == 2){
                room_goto(rm_Level3);
            }
        }
        if(keyboard_check_pressed(global.ckCancel[i])){
            room_goto(rm_CharacterSelect);
        }
    }
}
background_x[0] = 240-((xpos)/3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1-(xpos/64));
draw_set_color(c_white);
draw_set_font(fnt_Large);
draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_text_transformed((room_width/2)-xpos,4,"Choose a level",2,2,0);

draw_set_alpha(1-(xpos/64));
draw_sprite(spr_Maps,select,(room_width/2)-xpos,room_height/2);
draw_text_transformed((room_width/2)-xpos,room_height/2+56,"Map " + string(select+1),0.5,0.5,0);
draw_sprite_ext(spr_CharacterSelectUp,0,(room_width*0.1)-xpos,room_height/2,4+upscale,4+upscale,90,-1,1-(xpos/64));
draw_sprite_ext(spr_CharacterSelectUp,0,(room_width*0.9)-xpos,room_height/2,4+downscale,4+downscale,270,-1,1-(xpos/64));
    
draw_set_alpha(1);
draw_set_font(fnt_Main);
draw_set_valign(fa_bottom);
draw_text_transformed(room_width/2,room_height-4,"[Left/Right] Change Map  [Action] Confirm Map",1,1,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
